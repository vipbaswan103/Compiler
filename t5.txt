declare module readArr;
declare module sum;
declare module arraySum;

<<module subtract>>
takes input[a:integer, b:integer];
returns [diff:integer];
start	
	declare halfsum:integer;
	halfsum := (a+b)/2;
	diff:=5;
end

<<module arraySum>>
takes input[list:array[1..15] of real, n:integer, m:real];
start
	declare sum:integer;
	declare index:integer;
	declare t:boolean;
	t:=true;
	sum:=0.0;
	for(index in  1..15)
	start
		t:= index<=n;
		switch(t)
		start
			case true: print(list[index]);
				   sum:=sum+list[index];
				   break;
			case false: print(sum);
				    print(index);
				    break;
		end
	end
	print(sum);
end

<<<driver program>>>
start
	declare A:array[1..15] of real;
	declare k:integer;
	declare s:real;
	get_value(k);
	use module readArr with parameters A,k;
	use module arraySum with parameters A,k,s;
	print(s);
end

<<module readArr>>
takes input [arr1:array[1..15] of real,k:integer];
start
	declare tempvar:real;
	declare i:integer;
	i:=1;
	
	while(i<=k)
	start
		get_value(tempvar);
		arr1[i]:=tempvar;
		declare x:real;
		i:=i+1;
		declare x:integer;
		x:=5;
	end

	for(x in 10..5)
	start
	end
end

<<module sum>>
takes input [a:integer,b:integer];
returns [sum:integer];
start
	sum:=4;
	declare a:integer;
	a:=2;
	sum:=3;
end


