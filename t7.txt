**declare module arraySum;**

<<module arraySum>>
takes input[x:array[1..5] of real, n: boolean];
returns  [sum:real];
start

	print(sum);

	declare index:integer;
	declare t:boolean;
	**declare x:array[10..20] of boolean;**
	
	**declare out:integer;
	declare op1:array[1..2] of boolean;
	declare op2:boolean;
	out := op2 + op1;**


	index := 15;
	sum := 4.5;

	**for(index in 10..20)
	start
		t := true;
		print(t);
		declare t:integer;
		t := 15;
		print(t);
	end**


	index := 1;
	get_value(t);
	while(true AND false OR t)
	start
		print(x[index]);
		index := index + 1;
		get_value(t);
	end

	**x[15] := x;**
	
	
	**print(index);
	switch(t)
	start
		case false: print(index);
					declare y:integer;
					break;

		case true: get_value(t);
					print(5);
					print(t);
					break;
	end**
	
	**print(index);
	declare kkk:boolean;
	get_value(kkk);
	while(kkk)
	start
		get_value(index);
		switch(index)
		start
			case 10: 	print(1);
						break;
			case 13:	print(2);
						break;
			default:	print(false);
						break;
		end

		get_value(kkk);
	end
	print(index);**

	**declare s:integer;
	get_value(s);
	switch(s)
	start
		case 10: 	declare index, m: integer;
					for(index in 10..10)
					start
						m := index + 1;
						print(m);
					end
					break;
		default : break;
	end
    print(s);
	print(index);**
	**declare x:integer;**
end

<<<driver program>>>
start
	declare a:array[1..5] of real;
	declare x:integer;
	declare y:real;
	declare n:boolean;

	get_value(a);
	[y] := use module arraySum with parameters a, n;
end
